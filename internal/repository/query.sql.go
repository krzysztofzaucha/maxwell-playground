// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.13.0
// source: query.sql

package repository

import (
	"context"
	"database/sql"
)

const createPrimary = `-- name: CreatePrimary :execresult
INSERT INTO ` + "`" + `primary` + "`" + ` (` + "`" + `name` + "`" + `, ` + "`" + `value` + "`" + `)
VALUES (?, ?)
`

type CreatePrimaryParams struct {
	Name  string
	Value string
}

func (q *Queries) CreatePrimary(ctx context.Context, arg CreatePrimaryParams) (sql.Result, error) {
	return q.db.ExecContext(ctx, createPrimary, arg.Name, arg.Value)
}

const createSecondary = `-- name: CreateSecondary :execresult
INSERT INTO ` + "`" + `secondary` + "`" + ` (` + "`" + `name` + "`" + `, ` + "`" + `value` + "`" + `)
VALUES (?, ?)
`

type CreateSecondaryParams struct {
	Name  string
	Value string
}

func (q *Queries) CreateSecondary(ctx context.Context, arg CreateSecondaryParams) (sql.Result, error) {
	return q.db.ExecContext(ctx, createSecondary, arg.Name, arg.Value)
}

const createTertiary = `-- name: CreateTertiary :execresult
INSERT INTO ` + "`" + `tertiary` + "`" + ` (` + "`" + `name` + "`" + `, ` + "`" + `value` + "`" + `)
VALUES (?, ?)
`

type CreateTertiaryParams struct {
	Name  string
	Value string
}

func (q *Queries) CreateTertiary(ctx context.Context, arg CreateTertiaryParams) (sql.Result, error) {
	return q.db.ExecContext(ctx, createTertiary, arg.Name, arg.Value)
}

const saveDestination = `-- name: SaveDestination :execresult
INSERT IGNORE INTO ` + "`" + `destination` + "`" + ` (` + "`" + `source_id` + "`" + `, ` + "`" + `source_name` + "`" + `, ` + "`" + `value` + "`" + `)
VALUES (?, ?, ?)
`

type SaveDestinationParams struct {
	SourceID   int32
	SourceName string
	Value      string
}

func (q *Queries) SaveDestination(ctx context.Context, arg SaveDestinationParams) (sql.Result, error) {
	return q.db.ExecContext(ctx, saveDestination, arg.SourceID, arg.SourceName, arg.Value)
}
